#!/bin/sh

# We need root on the host to mess with networking
if [[ $(whoami) != "root" ]]; then
  echo "You must be root to run this script!"
  exit 1
fi;

start() {

    # Check for a player device already plumbed
    if [ `ifconfig -a | grep "player" | cut -d ':' -f 1` ]; then
        echo "Device is already up..."
        exit 1
    fi

    # We need root on the device to mess with networking
    echo 'Enabling adb root access...'
    adb -d root

    sleep 4
    echo 'Waiting for device to settle...'

    # Turn on usb networking
    echo 'Enabling usb network interface on the device... (via remote adb shell script)'
    adb -d shell 'sh /storage/sdcard0/reverse_tether.sh up &'
    
    echo 'Waiting for device to settle...'
    sleep 4

    # Rename device, annoying really (becomes player)
    IF=`ifconfig -a | grep "enp" | cut -d ':' -f 1`

    if [ -n $IF ]; then
        ip link set dev $IF down
        /usr/sbin/ifrename -i $IF -n player
        ip link set dev player up
        echo "Renamed wierd device name to player device..."
    else
        echo "Device rename failed, try again..."
        exit 1
    fi;

    echo 'Setting Local IP Stuff ...'
    ifconfig player 192.168.200.1 netmask 255.255.255.0
    ifconfig player up
    iptables -F -t nat
    iptables -A POSTROUTING -t nat -j MASQUERADE
    echo 1 > /proc/sys/net/ipv4/ip_forward

    echo 'Starting dnsmasq...'
    dnsmasq --interface=player --no-dhcp-interface=player
}

stop () {

    echo 'Using ssh to stop tethering on android device...'
    ssh root@192.168.200.2 'sh /storage/sdcard0/reverse_tether.sh down &'

    echo 'Shutting down reverse tethering locally...'

    killall dnsmasq
    ifconfig player down
    iptables -F -t nat
    echo 0 > /proc/sys/net/ipv4/ip_forward

}


case $1 in
        start)
                start
        ;;
        stop)
                stop
        ;;
        restart)
                start
                stop
        ;;
        *)
                echo "Usage start|stop|restart"
esac

